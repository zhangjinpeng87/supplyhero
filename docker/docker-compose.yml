services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: supply_hero
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: ../docker/backend.Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/supply_hero
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-super-secret-jwt-key-change-this-in-production
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/frontend-dev.Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules
    command: npm run dev

  # Celery Worker
  celery:
    build:
      context: ../backend
      dockerfile: ../docker/backend.Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/supply_hero
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-super-secret-jwt-key-change-this-in-production
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app
    command: celery -A app.celery worker --loglevel=info

volumes:
  postgres_data:
